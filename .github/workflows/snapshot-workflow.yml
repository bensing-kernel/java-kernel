# Source: https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-gradle#:~:text=With%20this%20configuration%2C%20you%20can%20create%20a%20workflow%20that%20publishes%20your%20package%20to%20GitHub%20Packages%20by%20running%20the%20gradle%20publish%20command

name: Java Kernel - SNAPSHOT - Workflow
on:
  push:
    branches:
      - 'main'
jobs:
  publish:
    runs-on: ubuntu-latest
    environment: io-bensing-maven-snapshots
    env:
      KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
      KOSLI_OWNER: ${{ secrets.KOSLI_OWNER}}
    steps:

      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 3

      - name: Setup Kosli CLI
        uses: kosli-dev/setup-cli-action@v1

      - name: Kosli - Declare a pipeline
        run: kosli pipeline declare --pipeline bensing-ledger -t pull-request,artifact,test

#      - name: Check a Pull Request exists for this commit
#        run: kosli assert github-pullrequest

      - name: Authenticate to Google Cloud Console
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_ARTIFACTORY_SERVICE_ACCOUNT}}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Install & Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '16'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Build & test
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build

      - name: Kosli - Report Creation of JAR Artifact
        run: |
          jarPath=(./build/libs/*)
          jarName="${jarPath##*/}"
        
          kosli pipeline artifact report creation $jarPath \
            --artifact-type file \
            --description $jarName \
            --owner Bensing-IO \
            --pipeline bensing-ledger

      - name: Kosli - Collect JUnit test artifacts
        run: |
          jarPath=(./build/libs/*)
          jarName="${jarPath##*/}"
          
          git_hash="$(git rev-parse --short HEAD)"
          test_archive_name=unit-test-results-$git_hash
          find ./build/test-results/test -name "*.xml" | tar -cvzf $test_archive_name.tar.gz -T -
          
          kosli pipeline artifact report evidence test $jarPath \
            --artifact-type file \
            --description $test_archive_name.tar.gz \
            --evidence-type 'test' \
            --owner Bensing-IO \
            --results-dir ./build/test-results/test \
            --pipeline bensing-ledger

      - name: Kosli - Log Expected Deployment
        run: |    
          jarPath=(./build/libs/*)
          jarName="${jarPath##*/}"
          
          kosli expect deployment $jarPath \
              --artifact-type file \
              --description $jarName \
              --environment io-bensing-maven-snapshots \
              --owner Bensing-IO \
              --pipeline bensing-ledger

      - name: Publish package to artifact repository
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: publish

      - name: Kosli - Report Deployment Approved
        run: |
          jarPath=(./build/libs/*)
          jarName="${jarPath##*/}"
                               
          kosli pipeline approval report $jarPath \
            --artifact-type file \
            --description $jarName \
            --newest-commit $(git rev-parse HEAD) \
            --oldest-commit $(git rev-parse HEAD~1) \
            --owner Bensing-IO \
            --pipeline bensing-ledger